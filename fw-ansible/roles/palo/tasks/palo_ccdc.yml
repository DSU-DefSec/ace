---
- name: palo_ccdc | Inbound phone # Don't ask any questions it just needs to be
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: inbound-phone
    source_zone: ["{{ alias.wan | default('wan') }}"]
    source_ip: ["{{ white_phone }}"]
    destination_zone: ["{{ alias.lan | default('lan') }}"]
    destination_ip: [any]
    application: [any]
    service: [any]
    action: allow
    location: top # Keep it this way or your life will be ruined
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]
  when: white_phone is defined

- name: palo_ccdc | Outbound phone
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-phone
    source_zone: ["{{ alias.lan | default('lan') }}"]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: ["{{ white_phone }}"]
    action: allow
    location: after
    existing_rule: inbound-phone
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]
  when: white_phone is defined

- name: palo_ccdc | Outbound CCS
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-ccs
    source_zone: [any]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: "{{ white_ccs }}"
    application: [any]
    action: allow
    existing_rule: "{{ 'outbound-phone' if white_phone is defined else omit }}"
    location: "{{ 'after' if outbound_phone is defined else 'top' }}"
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Outbound proxy
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-proxy
    source_zone: [any]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: ["{{ white_proxy }}"]
    service: [service-proxy]
    action: allow
    location: after
    existing_rule: outbound-ccs
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Outbound patch
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-white-patch
    source_zone: [any]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: ["{{ white_patch }}"]
    application: [any]
    action: allow
    location: after
    existing_rule: outbound-proxy
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Outbound NTP
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-white-ntp
    source_zone: [any]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: ["{{ white_ntp }}"]
    application: [ntp]
    action: allow
    location: after
    existing_rule: outbound-white-patch
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Outbound chat
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-chat
    source_zone: [any]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: ["{{ white_chat }}"]
    application: [any]
    action: allow
    location: after
    existing_rule: outbound-white-ntp
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Outbound inject
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-inject
    source_zone: [any]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: ["{{ white_inject }}"]
    application: [any]
    action: allow
    location: after
    existing_rule: outbound-chat
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Inbound icmp
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: inbound-icmp
    source_zone: ["{{ alias.wan | default('wan') }}"]
    source_ip: [any]
    destination_zone: ["{{ alias.lan | default('lan') }}"]
    destination_ip: [any]
    application: [ping]
    action: allow
    location: after
    existing_rule: outbound-inject
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Inbound rdp
  when: services.palo.win is defined
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: inbound-rdp
    source_zone: ["{{ alias.wan | default('wan') }}"]
    source_ip: [any]
    destination_zone: ["{{ alias.lan | default('lan') }}"]
    destination_ip: [windows]
    application: [ms-rdp]
    action: allow
    location: after
    existing_rule: inbound-icmp
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]

- name: palo_ccdc | Outbound whiteteam net
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    device_group: "{{ device_group if device_group is defined else omit }}"
    rule_name: outbound-white
    source_zone: [any]
    source_ip: [any]
    destination_zone: ["{{ alias.wan | default('wan') }}"]
    destination_ip: ["{{ white_net }}"]
    application: [any]
    action: allow
    location: after
    existing_rule: inbound-icmp
    group_profile: security
    log_start: true
    log_end: true
    log_setting: Loggie McLog Face
    tag_name: [CCDC]
